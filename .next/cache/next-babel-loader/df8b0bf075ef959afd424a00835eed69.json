{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hadi\\\\Desktop\\\\ReactApp\\\\GithubFormik\\\\Formik\\\\src\\\\components\\\\contectForm\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Formik, Field, Form, useField } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  firstName: yup.string().required().max(10),\n  LastName: yup.string().required().max(10),\n  Email: yup.string().email(),\n  Age: yup.number().positive().integer()\n});\n\nconst MyTextField = (_ref) => {\n  let {\n    placeholder\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"placeholder\"]);\n\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return __jsx(TextField, _extends({\n    placeholder: placeholder\n  }, field, {\n    helperText: errorText,\n    error: errorText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nconst contectForm = () => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Formik, {\n    validateOnChange: true,\n    initialValues: {\n      firstName: \"\",\n      LastName: \"\",\n      Email: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: data => {\n      console.log(data);\n      data.resetForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, ({\n    values\n  }) => __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Data Form\"), __jsx(\"label\", {\n    htmlFor: \"FirstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"First Name\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(MyTextField, {\n    name: \"firstName\",\n    placeholder: \"First name\",\n    type: \"input\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Last Name\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(MyTextField, {\n    name: \"LastName\",\n    placeholder: \"Last name\",\n    type: \"input\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Email\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(MyTextField, {\n    name: \"Email\",\n    placeholder: \"Email\",\n    type: \"input\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Age\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(MyTextField, {\n    name: \"Age\",\n    placeholder: \"Age\",\n    type: \"input\",\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default contectForm;","map":{"version":3,"sources":["C:/Users/Hadi/Desktop/ReactApp/GithubFormik/Formik/src/components/contectForm/index.js"],"names":["React","Formik","Field","Form","useField","TextField","Button","yup","validationSchema","object","firstName","string","required","max","LastName","Email","email","Age","number","positive","integer","MyTextField","placeholder","props","field","meta","errorText","error","touched","contectForm","data","console","log","resetForm","values"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Field, Form, useField } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string()\r\n    .required()\r\n    .max(10),\r\n  LastName: yup\r\n    .string()\r\n    .required()\r\n    .max(10),\r\n  Email: yup.string().email(),\r\n  Age: yup\r\n    .number()\r\n    .positive()\r\n    .integer()\r\n});\r\n\r\nconst MyTextField = ({ placeholder, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst contectForm = () => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        validateOnChange={true}\r\n        initialValues={{ firstName: \"\", LastName: \"\", Email: \"\" }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={data => {\r\n          console.log(data);\r\n          data.resetForm();\r\n        }}\r\n      >\r\n        {({ values }) => (\r\n          <Form>\r\n            <h3>Data Form</h3>\r\n            <label htmlFor=\"FirstName\">First Name</label>\r\n            <div>\r\n              <MyTextField\r\n                name=\"firstName\"\r\n                placeholder=\"First name\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n\r\n            <label htmlFor=\"email\">Last Name</label>\r\n            <div>\r\n              <MyTextField\r\n                name=\"LastName\"\r\n                placeholder=\"Last name\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <div>\r\n              <MyTextField\r\n                name=\"Email\"\r\n                placeholder=\"Email\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n            <label htmlFor=\"email\">Age</label>\r\n            <div>\r\n              <MyTextField\r\n                name=\"Age\"\r\n                placeholder=\"Age\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default contectForm;\r\n"]},"metadata":{},"sourceType":"module"}